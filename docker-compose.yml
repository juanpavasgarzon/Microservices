services:
  rabbitmq:
    image: rabbitmq:management-alpine
    container_name: microservices-rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5673:5672'
      - '15673:15672'
    env_file:
      - .env
    networks:
      - microservices-network

  mariadb:
    image: mariadb:10.11.6
    container_name: microservices-mariadb
    hostname: mariadb
    volumes:
      - /var/lib/mariadb
    ports:
      - '3300:3306'
    env_file:
      - .env
    networks:
      - microservices-network
    command: --default-authentication-plugin=mysql_native_password

  gateway:
    build:
      context: ./
      dockerfile: ./apps/gateway/Dockerfile
    container_name: microservices-gateway
    ports:
      - '4000:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - microservices-network
    command: npm run start:dev gateway

  inventory:
    build:
      context: ./
      dockerfile: ./apps/inventory/Dockerfile
    container_name: microservices-inventory
    ports:
      - '4001:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - microservices-network
    command: npm run start:dev inventory

  security:
    build:
      context: ./
      dockerfile: ./apps/security/Dockerfile
    container_name: microservices-security
    ports:
      - '4002:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - microservices-network
    command: npm run start:dev security

  stock:
    build:
      context: ./
      dockerfile: ./apps/stock/Dockerfile
    container_name: microservices-stock
    ports:
      - '4003:3000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - microservices-network
    command: npm run start:dev stock

networks:
  microservices-network:
    name: microservices-network
    driver: bridge
